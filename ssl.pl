#!/usr/bin/perl

# ssl.pl
$version = "4.1";
# 5/22/1998
# 2/4/2009
# By Dansie Website Design
# http://www.dansie.net
# Email: cart@dansie.net


# Full system path to ssl.txt file. Leave this variable blank. Place ssl.txt in same directory.
# ssl.pl should find it in most cases. If ssl.pl cannot find it, then set full sysetm path.
$vars = "";



####################################################################
# END OF VARIABLES. DO NOT MODIFY SCRIPT BEYOND THIS POINT.
####################################################################

 if (!$vars) { $vars = "ssl.txt"; } &get_vars("$vars"); if (!$lang[1] && !$lang[3] && !$lang[15]) { print "Content-Type: text/html\n\n"; print "ssl.pl cannot read ssl.txt.<BR>\nMake sure permissions on ssl.txt are chmoded as readable.<BR>\n"; exit; } read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'}); @pairs = split(/&/, $buffer); foreach $pair (@pairs) { ($name, $value) = split(/=/, $pair); $value =~ tr/+/ /; $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg; $value =~ s/~!/ ~!/g; $value =~ s/(`|\*|\(|\)|\[|\])//g; $FORM{$name} = $value; $FORM{$name} = &untaint($FORM{$name}); } $FORM{'meta_tag'} = "$meta_tag"; $pgp_open_command = 0; $FORM{'customerid'} =~ s/ //g; $delimiter = "|"; $record_separator = "\n\n\n\n"; if ($stay_in_ssl) { $FORM{'MerchantApprovedURL'} =~ s/http:/https:/i; $FORM{'MerchantUnApprovedURL'} =~ s/http:/https:/i; } if ( $sendmail ne "off" ) { if ( $sendmail =~ /(-server)/ ) { ($sendmail,@temp) = split(/ /,$sendmail); $blat_server_temp = " @temp"; } @common_sendmail_paths = ("/usr/sbin/sendmail", "/usr/lib/sendmail", "/usr/bin/sendmail", "/bin/sendmail", "/var/qmail/bin/qmail-inject", "/usr/home/stormer/bin/sendmail", "C:/winnt/system32/windmail.exe", "C:/winnt/system32/blat.exe", 'C:\httpd\windmail\windmail.exe', 'C:\httpd\Blat\Blat.exe', 'C:\winnt\system32\mail.exe'); foreach (@common_sendmail_paths) { if (-e "$_") { $sendmail = "$_"; last; } } if ( $blat_server_temp && $sendmail !~ /^\// ) { $sendmail .= "$blat_server_temp"; } } else { $FORM{'MerchantEmail'} = ""; } if ( $sendmail =~ /^(no_f_switch)(\|)(.+)$/i ) { ($trash,$sendmail) = split(/\|/,$sendmail); $no_f_switch = 1; } if ( $sendmail =~ /^(socket)(\|)(.+)$/i ) { ($trash,$socket_smtp_server,$socket_return_path) = split(/\|/,$sendmail); } if ( $blat_different_temp_directory ) { $FORM{'blat_different_temp_directory'} = reverse($FORM{'blat_different_temp_directory'}); until ( $FORM{'blat_different_temp_directory'} !~ /\// ) { chop($FORM{'blat_different_temp_directory'}); } $FORM{'blat_different_temp_directory'} = reverse($FORM{'blat_different_temp_directory'}); if ( $blat_different_temp_directory =~ /\/$/ ) { chop($blat_different_temp_directory); } $FORM{'blat_different_temp_directory'} = "$blat_different_temp_directory/$FORM{'blat_different_temp_directory'}"; } if ( $ENV{'OS'} && $FORM{'blat_different_temp_directory'} && $FORM{'MerchantEmail'} ) { $FORM{'blat_different_temp_directory_exists_test'} = "$FORM{'blat_different_temp_directory'}"; $a = ""; until ( $a eq "/" || $FORM{'blat_different_temp_directory_exists_test'} eq "") { $a = chop($FORM{'blat_different_temp_directory_exists_test'}); } if (!-e "$FORM{'blat_different_temp_directory_exists_test'}") { &diagnostics if(!$disable_diagnostics); print "Content-type: text/html\n\n <H3>Dansie Shopping Cart configuration message:<BR> You are attempting to use this directory for writing temporary files to:<BR> \"$FORM{'blat_different_temp_directory_exists_test'}\"<BR> However this directory does not exist. If you are running the ssl.pl script on a different host than the cart.pl script is on then open the ssl.pl script and set the \$blat_different_temp_directory variable near the top of the script.<BR>"; print "</H3>"; &footer; } } $FORM{'target_name'} = "_top"; if ( $FORM{'card_types'} ) { if ( $FORM{'card_types'} =~ /(visa)/i || $FORM{'card_types'} =~ /(visa)$/i ) { $visa = 1; } if ( $FORM{'card_types'} =~ /(mastercard)/i ) { $mastercard = 1; } if ( $FORM{'card_types'} =~ /(amex)/i ) { $amex = 1; } if ( $FORM{'card_types'} =~ /(novus)/i || $FORM{'card_types'} =~ /(discover)/i  ) { $novus = 1; } if ( $FORM{'card_types'} =~ /(dinersclub)/i ) { $dinersclub = 1; } if ( $FORM{'card_types'} =~ /(carteblanche)/i ) { $carteblanche = 1; } if ( $FORM{'card_types'} =~ /(delta)/i ) { $delta = 1; } if ( $FORM{'card_types'} =~ /(switch)/i ) { $switch = 1; } if ( $FORM{'card_types'} =~ /(solo)/i ) { $solo = 1; } if ( $FORM{'card_types'} =~ /(visadebit)/i ) { $visadebit = 1; } if ( $FORM{'card_types'} =~ /(barclaysconnect)/i ) { $barclaysconnect = 1; } } else { $visa = 1; $mastercard = 1; $amex = 1; $novus = 1; $dinersclub = 0; $carteblanche = 0; } if ( ( $FORM{'card_types'} =~ /(visa)/i || $FORM{'card_types'} =~ /(mastercard)/i || $FORM{'card_types'} =~ /(amex)/i || $FORM{'card_types'} =~ /(novus)/i || $FORM{'card_types'} =~ /(discover)/i || $FORM{'card_types'} =~ /(dinersclub)/i || $FORM{'card_types'} =~ /(carteblanche)/i ) && ( $require_3_digit_number ) ) { $use_3_digit_number = 1; } if ($FORM{'cardtype'} eq "visa") { $cardtype = "$lang[14]"; } if ($FORM{'cardtype'} eq "mastercard") { $cardtype = "$lang[15]"; } if ($FORM{'cardtype'} eq "amex") { $cardtype = "$lang[16]"; } if ($FORM{'cardtype'} eq "novus") { $cardtype = "$lang[17]"; } if ($FORM{'cardtype'} eq "dinersclub") { $cardtype = "$lang[18]"; } if ($FORM{'cardtype'} eq "carteblanche") { $cardtype = "$lang[19]"; } if ($FORM{'cardtype'} eq "delta") { $cardtype = "$lang[57]"; } if ($FORM{'cardtype'} eq "switch") { $cardtype = "$lang[58]"; } if ($FORM{'cardtype'} eq "solo") { $cardtype = "$lang[59]"; } if ($FORM{'cardtype'} eq "visadebit") { $cardtype = "$lang[60]"; } if ($FORM{'cardtype'} eq "barclaysconnect") { $cardtype = "$lang[61]"; } $check_font_size = "-1"; if ( $ENV{'QUERY_STRING'} ne "check" ) { $subject = "$lang[29]"; } else { $subject = "$lang[42]"; } if ( $FORM{'ssl_url'} =~ /^(https)/i ) { $ENV{'HTTPS'} = "on"; } if ( $append_datafile ) { $FORM{'append_datafile'} = "$append_datafile"; } if ( $append_datafile eq "off" ) { $FORM{'append_datafile'} = ""; } if ( $ssl_email ) { $FORM{'MerchantEmail'} = "$ssl_email"; } if ( $ssl_email eq "off" ) { $FORM{'MerchantEmail'} = ""; } if ( $FORM{'append_datafile'} =~ /^http/i ) { &diagnostics if(!$disable_diagnostics); print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>Please set only system paths in Secure Server Variable #8 in your vars.dat file.<BR> System path example:<BR>"; if ( $ENV{'OS'} ) { print "<B>c:/home/yourname/cgi-bin/orders.dat</B><BR>"; } elsif (!$ENV{'DOCUMENT_ROOT'} && !$ENV{'OS'} ) { print "<B>c:/home/yourname/cgi-bin/orders.dat</B><BR>"; } else { print "<B>/usr/local/etc/httpd/htdocs/yourname/cgi-bin/orders.dat</B><BR>"; } print "URL example:<BR><B>$FORM{'ssl_url'}</B><BR>URLs start with \"http\" system paths do not.<BR>"; if ( $append_datafile ) { print "Check the \$append_datafile variable near the top of the ssl.pl script.<BR>"; } print "</H3>"; &footer; } if ( $FORM{'append_datafile'} ) { &diagnostics if(!$disable_diagnostics); $temp = "$FORM{'append_datafile'}"; if ( $FORM{'append_datafile'} =~ /(.+)(\|)(.+)/ ) { $temp = $1; } if (!-e "$temp") { open(FILE,">$temp"); close(FILE); } if (!-e "$temp") { print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>You are attempting to append order information to: \"$temp\"<BR>This file or directory does not exist. Please see Secure Server Variable #8 in section 11 of the <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A>. <BR>If this is the correct system path, then create this file or directory and set permissions on it so that it is globally writable. If your ssl.pl script is hosted on a different server than where the cart.pl script is hosted, then you will need to set two system paths in SSV#8. See Secure Server Variable #8 in section 11 the <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A> for detailed instructions."; if ( $append_datafile ) { print "Check the \$append_datafile variable near the top of the ssl.pl script.<BR>"; } print "</H3>"; &footer; } if (!-w "$temp") { print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>You are attempting to append order information to: \"$temp\"<BR>This file or directory does not appear to have permissions set on it as writable. You will need to set permissions on this file or directory so that the ssl.pl script can write to it, or the order information will not be appended to it. See Secure Server Variable #8 in section 11 the <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A> for detailed instructions."; print "</H3>"; &footer; } } $ssl_tracking_dir = ""; $FORM{'ssl_tracking_dir'} = "$ssl_tracking_dir"; if ( $FORM{'ssl_tracking_dir'} ) { &diagnostics if(!$disable_diagnostics); $temp = "$FORM{'ssl_tracking_dir'}"; if (!-e "$temp") { open(FILE,">$temp"); close(FILE); } if (!-e "$temp") { print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>You are attempting to append order information to: \"$temp\"<BR>This file does not exist.<BR>If this is the correct system path, then create this file and set permissions on it so that it is globally writable. Please see Personal Variable #69 in <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A> for detailed instructions."; print "</H3>"; &footer; } if (!-w "$temp") { print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>You are attempting to append order information to: \"$temp\"<BR>This file does not appear to have permissions set on it as writable. You will need to set permissions on this file or directory so that the ssl.pl script can write to it, or the order information will not be appended to it. See Personal Variable #69 in <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A> for detailed instructions."; print "</H3>"; &footer; } } $date = &get_date; while ($authorized_referrers =~ /(\n|\r|\s|\,)$/) { chop($authorized_referrers); } $authorized_referrers =~ s/\,\,/\,/; $authorized_referrers =~ s/^\,//; (@authorized_referrers) = split(/\,/,$authorized_referrers); foreach (@authorized_referrers) { $_ =~ s/^ //; $_ =~ s/ $//; $_ =~ s/^(www\.)//; } if ( $ENV{'HTTP_USER_AGENT'} =~ /(WebTV)/ ) { $lang[24] = ""; } if (!$FORM{'BillState'}) { $FORM{'use_state'} = ""; } if (!$lang[68]) { $lang[68] = "$lang[63]"; } $cardtype_variable_name = "cardtype"; $ExpirationMonth = "ExpirationMonth"; $ExpirationYear = "ExpirationYear"; &diagnostics if(!$disable_diagnostics); if ( !$FORM{'form_action'} && $ENV{'REQUEST_METHOD'} !~ /POST/i ) { print "Content-type: text/html\n\n"; print " <HTML> <HEAD> <TITLE>ssl.pl Installation Success!</TITLE> </HEAD> <BODY BGCOLOR=\"#FFFFFF\"> <H2>Your ssl.pl script is successfully installed!</H2> <H3>To test it:</H3> <UL> <LI>Make sure Personal Variable #24 is set to \"1\" to allow Secure Online Credit Card Transactions. <LI>Set Secure Server Variable #1 to the full URL to this script. <UL> <LI><FONT SIZE=-1>If you want the ssl.pl script to collect credit card info in SSL (Secure Sockets Layer - secure mode) you will need to have a site security certificate. A site security certificate will allow you to set SSV#1 with an \"https\" URL. If you are not sure if you have a site security certificate or would like to obtain one, contact your web host for help with that. <LI>When calling this script, or ANY document on your website via your \"https\" URL, if you get a security alert about your security certificate, you should contact your web host for help with that.</FONT> </UL> <LI>Make sure Personal Variable #42 is set to the full URL of this script if using Online Check Draft payment option. (It would be the same as Secure Server Variable #1.) <LI>Place an item in your shopping cart. <LI>Choose Secure Online Credit Card Transaction or Online Check Draft as your payment method. <LI>Submit your shipping address. <LI><A HREF=\"http://www.dansie.net/creditcards.html\" TARGET=\"creditcards\">More Details</A> on credit card transactions. </UL>"; &footer; } if ( $ENV{'QUERY_STRING'} eq "www.aba.net.au" ) { &authorized_referrers; $FORM{'fulltotal'} *= 100; print "Content-type: text/html\n\n"; print " <HTML> <HEAD> <TITLE>Secure Payment Form - $FORM{'MerchantName'} </TITLE>\n$FORM{'meta_tag'}\n </HEAD> <BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\"> <CENTER> <APPLET CODEBASE=\"https://sec.aba.net.au/merchant/wbs/classes\" ARCHIVE=\"start.zip\" CODE=\"sec.tools.SecurEpayment.SecurEpayment.class\" WIDTH=470 HEIGHT=286> <PARAM NAME=\"CABBASE\"     VALUE=\"payment.cab\"> <PARAM NAME=\"secparams\"   VALUE=\"$FORM{'MerchantID'}\"> <PARAM NAME=\"referenceid\" VALUE=\"$FORM{'customerid'}\"> <PARAM NAME=\"amount\"      VALUE=\"$FORM{'fulltotal'}\"> <PARAM NAME=\"resulturl\"   VALUE=\"$FORM{'MerchantApprovedURL'}\"> <PARAM NAME=\"copyright\"   VALUE=\"Copyright 1997 Australian Business Access, All Rights Reserved. Use without permission strictly prohibited.\"> </APPLET> </CENTER> </BODY></HTML>"; exit; } if (!$ENV{'CONTENT_LENGTH'}) { print "Content-type: text/html\n\n"; print "$lang[69]\n"; print "<B>Browser:</B> $ENV{'HTTP_USER_AGENT'}<BR><BR>\n"; print "<B>STDIN:</B> $buffer<BR><BR>\n"; print "<B>\$ENV{'CONTENT_LENGTH'}:</B> $ENV{'CONTENT_LENGTH'}<BR><BR>\n"; exit; } if ( $ENV{'QUERY_STRING'} eq "atsbank" || $ENV{'QUERY_STRING'} eq "bluepay" || $ENV{'QUERY_STRING'} eq "skipjack" ) { if ( $ENV{'QUERY_STRING'} eq "skipjack" ) { $processor_post_url = "https://www.skipjackic.com/scripts/evolvcc.dll?authorize"; @variable_names = ("", "TransactionAmount", "MerchantName", "SerialNumber", "MerchantEmail", "MerchantFont", "MerchantFontColor", "MerchantBgrdColor", "accepturl", "declineurl", "OrderNumber", "SJName", "StreetAddress", "City", "State", "ZipCode", "Country", "ShiptoPhone", "Email", "MerchantReturnURL", "AccountNumber", "Month", "Year", "CVV2", "", "Orderstring"); $custom25 = "ItemNumber~ItemDescription~Cost~Quantity~Taxable~||"; $require_3_digit_number = 1; $cardtype_variable_name = "CardType"; $ExpirationMonth = "Month"; $ExpirationYear = "Year"; } if ( $ENV{'QUERY_STRING'} eq "atsbank" ) { $processor_post_url = "https://trans.atsbank.com/cgi-bin/ats.cgi"; @variable_names = ("", "amount", "MerchantName", "atsid", "MerchantEmail", "MerchantFont", "MerchantFontColor", "MerchantBgrdColor", "accepturl", "declineurl", "ci_memo", "ccname", "ci_billaddr1", "ci_billcity", "ci_billstate", "ci_billzip", "ci_billcountry", "ci_phone", "ci_email", "MerchantReturnURL", "ccnum", "expmon", "expyear", "cvv2", "action", "usepost"); $custom24 = "ns_quicksale_cc"; $custom25 = "1"; $collect_exp_month_year_together = 0; $no_browser_warning_redirect = "http://trans.atsbank.com/cgi-bin/redirect.cgi?"; $FORM{'MerchantApprovedURL'} = "$no_browser_warning_redirect$FORM{'MerchantApprovedURL'}"; $FORM{'MerchantUnApprovedURL'} = "$no_browser_warning_redirect$FORM{'MerchantUnApprovedURL'}"; } if ( $ENV{'QUERY_STRING'} eq "bluepay" ) { $processor_post_url = "https://secure.bluepay.com/interfaces/bp10emu"; @variable_names = ("", "AMOUNT", "MerchantName", "MERCHANT", "MerchantEmail", "MerchantFont", "MerchantFontColor", "MerchantBgrdColor", "APPROVED_URL", "DECLINED_URL", "ORDER_ID", "NAME", "ADDR1", "CITY", "STATE", "ZIPCODE", "ci_billcountry", "PHONE", "EMAIL", "MerchantReturnURL", "CC_NUM", "CC_EXPIRES", "expyear", "CVCCVV2", "", "", "", ""); if ( $FORM{'card_types'} =~ /(TRANSACTION_TYPE)(\=)(.+?)(,|\n|$)/i ) { $variable_names[24] = "$1"; $custom24 = "$3"; } else { $variable_names[24] = "TRANSACTION_TYPE"; $custom24 = "SALE"; } eval("use Digest::MD5 qw(md5_hex);"); if ($@) { print "Content-Type: text/html\n\n"; print "<H2>The MD5 Perl module is required for the ssl.pl script to work with BluePay. Ask your host to install the MD5 Perl module.<BR><BR>ERROR: $@</H2>\n"; exit; } if (!$secret_key) { print "Content-Type: text/html\n\n"; print "<H2>Set your BluePay secret key in the \$secret_key variable near the top of the ssl.pl script.</H2>\n"; exit; } if ( $FORM{'card_types'} =~ /(MODE)(\=)(.+?)(,|\n|$)/i ) { $variable_names[26] = "$1"; $custom26 = "$3"; } else { $variable_names[26] = "MODE"; $custom26 = "LIVE"; } $variable_names[25] = "TAMPER_PROOF_SEAL"; $custom25 = md5_hex("$secret_key$FORM{MerchantID}$custom24$FORM{fulltotal}$custom26"); $variable_names[27] = "MISSING_URL"; $custom27 = "$FORM{'MerchantUnApprovedURL'}"; $variable_names[28] = "RETURN_FORMAT"; $custom28 = "BROKEN"; $collect_exp_month_year_together = 1; $FORM{'MerchantApprovedURL'} = "$no_browser_warning_redirect$FORM{'MerchantApprovedURL'}"; $FORM{'MerchantUnApprovedURL'} = "$no_browser_warning_redirect$FORM{'MerchantUnApprovedURL'}"; } &authorized_referrers; print "Content-type: text/html\n\n"; print " <HTML> <HEAD>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1] - $FORM{'MerchantName'}</TITLE>"; } else { print "<TITLE>$lang[25] - $FORM{'MerchantName'}</TITLE>"; } print "\n$FORM{'meta_tag'}\n</HEAD>"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"#FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\">"; } print "<FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"> <FORM METHOD=post ACTION=\"$processor_post_url\">\n"; print " <input type=hidden name=\"$variable_names[24]\" value=\"$custom24\"> <input type=hidden name=\"$variable_names[25]\" value=\"$custom25\"> <input type=hidden name=\"$variable_names[26]\" value=\"$custom26\"> <input type=hidden name=\"$variable_names[27]\" value=\"$custom27\"> <input type=hidden name=\"$variable_names[28]\" value=\"$custom28\"> \n"; print " <INPUT TYPE=hidden NAME=\"$variable_names[1]\" VALUE=\"$FORM{'fulltotal'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[2]\" VALUE=\"$FORM{'MerchantName'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[3]\" VALUE=\"$FORM{'MerchantID'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[10]\" VALUE=\"$FORM{'customerid'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[4]\" VALUE=\"$FORM{'MerchantEmail'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[8]\" VALUE=\"$FORM{'MerchantApprovedURL'}\"> <INPUT TYPE=hidden NAME=\"$variable_names[9]\" VALUE=\"$FORM{'MerchantUnApprovedURL'}\">"; print "<H1><CENTER>$FORM{'MerchantName'}</CENTER></H1><P><H4><CENTER>"; if ( $FORM{'ssl_logo_url'} ) { print "<CENTER><IMG SRC=\"$FORM{'ssl_logo_url'}\" ALT=\"$FORM{'MerchantName'}\" BORDER=0></CENTER>\n"; } if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "$lang[1]"; } else { print "$lang[25]<BR>$lang[2]"; } print "</CENTER></H4><P> <H4><CENTER>  </CENTER></H4><P> <B> <CENTER> $lang[3]   $FORM{'$'+'fulltotal'} </CENTER> </B> <CENTER> <H3>$lang[4] </H3> </CENTER> <B> <CENTER> <TABLE BORDER=1> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[5] </FONT></TD><TD>\n<INPUT name=\"$variable_names[11]\" size=30 value=\"$FORM{'BillName'}\"></TD> </TR> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[6] </FONT></TD><TD>\n<INPUT name=\"$variable_names[12]\" size=30 value=\"$FORM{'BillStreet'}\"></TD> </TR> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[7] </FONT></TD><TD>\n<INPUT name=\"$variable_names[13]\" size=30 value=\"$FORM{'BillCity'}\"></TD> </TR>"; if ( $FORM{'use_state'} ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[8] </FONT></TD><TD>\n<INPUT name=\"$variable_names[14]\" size=30 value=\"$FORM{'BillState'}\"></TD> </TR>"; } if ( $lang[9] ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[9] </FONT></TD><TD>\n<INPUT name=\"$variable_names[15]\" size=10 value=\"$FORM{'BillZip'}\"></TD> </TR>"; } if ( $lang[10] ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[10] </FONT></TD><TD>\n<INPUT name=\"$variable_names[16]\" size=30 value=\"$FORM{'BillCountry'}\"></TD> </TR>\n"; } if ($lang[12]) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[12] </FONT></TD><TD>\n<INPUT name=\"$variable_names[17]\" size=15 maxlength=15 value=\"$FORM{'BillPhone'}\"></TD> </TR>\n"; } if ($require_email) { print "<TR><TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[11] </FONT></TD><TD>\n<INPUT name=\"$variable_names[18]\" size=30 value=\"$FORM{'BillEmail'}\"></TD> </TR>"; } $confirm = "$lang[24]"; if ( $ENV{'QUERY_STRING'} eq "skipjack" ) { &display_card_types; } print " <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[20] </FONT></TD><TD>\n<INPUT name=\"$variable_names[20]\" size=30 value=\"\"></TD> </TR>"; if ($collect_exp_month_year_together) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[67]</FONT> </TD><TD> \n<INPUT TYPE=TEXT NAME=\"$variable_names[21]\" SIZE=10></TD></TR>\n"; } else { &month_and_year_expiration_select_menus; } if ($never == 987) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[21]</FONT> </TD><TD> \n<INPUT TYPE=TEXT NAME=\"$variable_names[21]\" SIZE=10></TD></TR> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[22]</FONT> </TD><TD> \n<INPUT TYPE=TEXT NAME=\"$variable_names[22]\" SIZE=10></TD></TR>\n"; } if ( $require_3_digit_number ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[63] </FONT></TD><TD>\n<INPUT name=\"$variable_names[23]\" size=4 maxlength=4 value=\"\"></TD> </TR>\n"; } print "</TABLE>\n"; print "</CENTER> </B><P> <CENTER>\n"; if ($confirm) { $confirm_javascript = "onClick=\"return confirm('$confirm')\""; } if ( $lang[23] =~ /^http/i ) { print "\n<INPUT  TYPE=HIDDEN NAME=\"form_action\" VALUE=\"$lang[23]\">"; print "\n<INPUT  TYPE=IMAGE NAME=\"\" SRC=\"$lang[23]\" VALUE=\"$lang[23]\" BORDER=0 $confirm_javascript >"; } else { print "\n<INPUT  TYPE=submit NAME=\"form_action\" VALUE=\"$lang[23]\" $confirm_javascript >"; } print "<P> </CENTER> \n</FORM>\n"; &back_button2; print "</FONT>"; print "<CENTER>$lang[64]</CENTER></BODY></HTML>"; exit; } if ( !$FORM{'form_action'} ) { &authorized_referrers; print "Content-type: text/html\n\n"; print " <HTML> <HEAD>\n"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1] $FORM{'MerchantName'}</TITLE>\n"; } else { print "<TITLE>$lang[25] - $FORM{'MerchantName'}</TITLE>\n"; } print "\n$FORM{'meta_tag'}\n</HEAD>\n"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">\n"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\" style=\"background-color:#F0F2F4 \">\n"; } print "<FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">\n"; &resubmit_info; if ($ENV{'QUERY_STRING'} eq "cybersource" ) { print "<INPUT TYPE=hidden NAME=\"cybersource\" VALUE=\"1\">\n"; } print "<H1><CENTER>$FORM{'MerchantName'}</CENTER></H1>\n"; if ( $FORM{'ssl_logo_url'} ) { print "<CENTER><IMG SRC=\"$FORM{'ssl_logo_url'}\" ALT=\"$FORM{'MerchantName'}\" BORDER=0></CENTER>\n"; } print "<P><H4 style=\"padding: 30px 0px 0px 0px; font-size: 24px;\"><CENTER>\n"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "$lang[1]\n"; } else { print "$lang[25]<BR>$lang[2]\n"; } print "</CENTER></H4><P> <H4><CENTER>  </CENTER></H4 ><P> <B> <CENTER style=\"font-size: 18px;\"> $lang[3] &nbsp; $FORM{'fulltotal'} </CENTER> </B> <CENTER> <H3>  </H3> </CENTER> <B> <CENTER> <TABLE style=\"max-width: 568px;background-color: white; box-shadow: 0px 0px 8px 3px rgb(165, 165, 165); padding: 20px; border-radius: 5px;\"> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[5] </FONT></TD><TD><INPUT name=\"BillName\" size=30 value=\"$FORM{'BillName'}\"></TD> </TR>"; if ( $FORM{'company'} ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[56] </FONT></TD><TD><INPUT name=\"company\" size=30 value=\"$FORM{'company'}\"></TD> </TR>"; } print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[6] </FONT></TD><TD><INPUT name=\"BillStreet\" size=30 value=\"$FORM{'BillStreet'}\"></TD> </TR> <TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[7] </FONT></TD><TD><INPUT name=\"BillCity\" size=30 value=\"$FORM{'BillCity'}\"></TD> </TR>\n"; if ( $FORM{'use_state'} ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[8] </FONT></TD><TD><INPUT name=\"BillState\" size=30 value=\"$FORM{'BillState'}\"></TD> </TR>\n"; } if ( $lang[9] ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[9] </FONT></TD><TD><INPUT name=\"BillZip\" size=10 value=\"$FORM{'BillZip'}\"></TD> </TR>\n"; } if ( $lang[10] ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[10] </FONT></TD><TD><INPUT name=\"BillCountry\" size=30 value=\"$FORM{'BillCountry'}\"></TD> </TR>\n"; } if ($lang[12]) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[12] </FONT></TD><TD><INPUT name=\"BillPhone\" size=20 value=\"$FORM{'BillPhone'}\"></TD> </TR>\n"; } if ($require_email) { print "<TR><TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[11] </FONT></TD><TD><INPUT name=\"BillEmail\" size=30 value=\"$FORM{'BillEmail'}\"></TD> </TR>\n";} if ( $ENV{'QUERY_STRING'} ne "check" ) { $confirm = "$lang[24]"; &display_card_types; print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[20] </FONT></TD><TD ><INPUT MAXLENGTH=16 PLACEHOLDER=XXXX-XXXX-XXXX-XXXX style=\"padding: 10px; font-size: 16px;\" name=\"BillCreditCard\" size=30 value=\"\"></TD> </TR>"; if ( $require_3_digit_number ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[63] </FONT></TD><TD><INPUT style=\"padding: 10px; font-size: 16px;\" name=\"3_digit_number\" size=4 maxlength=4 value=\"\"></TD> </TR>\n"; } if ( $switch || $solo ) { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[53] </FONT></TD><TD><INPUT name=\"switch\" size=30 value=\"\"></TD> </TR>\n"; print "<TR>\n"; if ( $lang[62] ) { print "<TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[62] </FONT></TD><TD><INPUT name=\"switch_start_date\" size=30 value=\"\"></TD>\n"; } print "</TR>\n"; } &month_and_year_expiration_select_menus; } print "</TABLE>\n"; if ( $ENV{'QUERY_STRING'} eq "check" ) { &print_check_draft_info; $confirm = "$lang[33]"; } print "</CENTER> </B><P> <CENTER>\n"; if ($confirm) { $confirm_javascript = "onClick=\"return confirm('$confirm')\""; } if ( $lang[23] =~ /^http/i ) { print "<INPUT  TYPE=HIDDEN NAME=\"form_action\" VALUE=\"$lang[23]\">\n"; print "<INPUT TYPE=IMAGE NAME=\"\" SRC=\"$lang[23]\" VALUE=\"$lang[23]\" BORDER=0 $confirm_javascript >\n"; } else { print "<INPUT style=\"padding: 10px; width: 220px; height: 39px; background-color: #F96767; font-weight: bold; cursor: pointer; border-radius:5px;\" TYPE=submit NAME=\"form_action\" VALUE=\"$lang[23]\" $confirm_javascript >\n"; } print "<P> </CENTER> </FORM>\n"; &back_button2; print "</FONT><CENTER>$lang[64]</CENTER></BODY></HTML>\n"; exit; } if ( $FORM{'form_action'} ) { &authorized_referrers; if ( ( !$FORM{'fulltotal'} ||  !$FORM{'BillName'} || (!$FORM{'BillStreet'} && $lang[56] =~ /company/i) || !$FORM{'BillCity'} || ( !$FORM{'BillEmail'} && $require_email == 2 ) ) || ( !$FORM{'BillState'} && $FORM{'use_state'} ) || ( !$FORM{'BillZip'} && ($lang[9] && $require_zip_code == 2 )) || ( !$FORM{'BillPhone'} && $lang[12] ) || ( !$FORM{'BillCountry'} && $lang[10] ) || ( !$FORM{'company'} && $FORM{'use_company_name_field'} ) || ( ($ENV{'QUERY_STRING'} ne "check") && ( ( !$FORM{'cardtype'} && $lang[13] ) || !$FORM{'ExpirationMonth'} || !$FORM{'ExpirationYear'} || !$FORM{'BillCreditCard'} || ( (!$FORM{'3_digit_number'} && ($require_3_digit_number == 2) ) && ( $FORM{'cardtype'} eq "visa" || $FORM{'cardtype'} eq "mastercard" || $FORM{'cardtype'} eq "amex" || $FORM{'cardtype'} eq "novus" || $FORM{'cardtype'} eq "dinersclub" || $FORM{'cardtype'} eq "carteblanche" ) ) || ( $require_switch_issue_number && $FORM{'cardtype'} eq "switch" && ( !$FORM{'switch'} || !$FORM{'switch_start_date'} ) ) ) ) || ( ($ENV{'QUERY_STRING'} eq "check") && ( !$FORM{'bank_name'} ||  ( !$FORM{'bank_address'} && $require_bank_address == 2 ) || ( !$FORM{'bank_city'} && $require_bank_city == 2 ) || ( !$FORM{'bank_state'} && $require_bank_state == 2 ) || ( !$FORM{'bank_postal_code'} && $require_bank_zip == 2 ) || ( !$FORM{'bank_phone'} && $require_bank_phone == 2 ) || ( !$FORM{'check_number'} && $require_check_number == 2 ) || ( !$FORM{'aba_number'} && $require_aba_number == 2 ) || !$FORM{'check_date'} || ( !$FORM{'routing_number'} && $require_routing_number == 2 ) || !$FORM{'account_number'} || !$FORM{'authorized_by'} ) ) ) { if ( $perl_redirect ) { print "Location: $FORM{'MerchantUnApprovedURL'}\n\n"; } print "Content-type: text/html\n\n"; print " <HTML> <HEAD>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1]"; } else { print "<TITLE>$lang[25]"; } print " - $FORM{'MerchantName'}</TITLE>"; print "\n$FORM{'meta_tag'}\n</HEAD>"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"#FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\">"; } print "<FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"> <H1><CENTER>$FORM{'MerchantName'}</CENTER></H1><P>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<H4><CENTER>$lang[1]</CENTER></H4><P>"; } else { print "<H4><CENTER>$lang[25]</CENTER></H4><P>"; } print "<H3><CENTER>"; print "$lang[26]<BR>"; if ( $FORM{'MerchantReturnURL'} ) { print "<SCRIPT language=\"JavaScript1.2\">\n if( (parseInt( navigator.appVersion ) >= 4.5) && ( (navigator.appName!=\"Netscape\") || ( navigator.appVersion.search(/Mac/i)>=0 ) ) ) { document.write('<A HREF=\"$FORM{'MerchantReturnURL'}\">$lang[54]</A>') }\n </SCRIPT>\n"; } print" </CENTER></H3><P>"; &back_button; print "<CENTER>$lang[64]</CENTER></BODY></HTML>"; exit; } if ($FORM{'cybersource'}) { &cybersource; } elsif ($ENV{'QUERY_STRING'} ne "check" && $CC_Verify) { &CC_Verify; } if ($FORM{'MerchantEmail'}) { $myemail = "$FORM{'MerchantEmail'}"; $myemail =~ s/ /\,/g; $myemail =~ s/\,\,/\,/g; $myemail =~ s/\,\,/\,/g; @myemail = split(/\,/,$myemail); foreach $myemail (@myemail) { &send_email('email'); } } &send_email('append_datafile') if ($FORM{'append_datafile'}); &valid_cc; exit; } sub send_email { if ( ( $FORM{'pgp'} || $pgpprog ) && (!$disable_pgp) ) { chomp($FORM{'pgp'}); if (!$pgpprog) { ($pgpprog,$pgptempdir,$pgpuserid,$pgpversion) = split(/\|/,$FORM{'pgp'}); } if (!-e"$pgpprog") { print "Content-Type: text/html\n\n"; print "<H3>Dansie Shopping Cart configuration message. PGP program does not appear to exists at this location: \"$pgpprog\"<BR>Check your settings in Secure Server Variable #10</H3>"; exit; } if (!-w"$pgptempdir") { print "Content-Type: text/html\n\n"; print "<H3>Dansie Shopping Cart configuration message. The temp directory for the PGP program does not appear to be writable. \"$pgptempdir\"<BR>Check your settings in Secure Server Variable #10"; exit; } srand; do { $tempfile = int(rand(99999999)); } until (!-e "$pgptempdir/$tempfile"); $pgp_key_exists = 0; if ( ($pgpversion eq "2.6.2") && (!$pgp_open_command) ) { system("$pgpprog +batchmode -kv $pgpuserid >$pgptempdir/$tempfile"); } else { $pgp_key_exists = 1; } open(PGPKEY,"$pgptempdir/$tempfile"); while(<PGPKEY>) { $pgp_key_exists = 1 if /^1 matching key/; } close(PGPKEY); unlink("$pgptempdir/$tempfile"); srand; do { $tempfile = int(rand(99999999)); } until (!-e "$pgptempdir/$tempfile"); $tempfile = $tempfile . ".txt"; if ( $pgp_key_exists ) { &email_body; if ( $pgpversion eq "5.0" ) { open(MAIL,">$pgptempdir/$tempfile"); print MAIL "$body_temp$record_separator"; close(MAIL); system("$pgpprog -r $pgpuserid $pgptempdir/$tempfile"); } elsif ($pgpversion eq "gpg1.0") { open(MAIL,">$pgptempdir/$tempfile"); print MAIL "$body_temp$record_separator"; close(MAIL); system("$pgpprog -ear $pgpuserid $pgptempdir/$tempfile > $pgptempdir/out 2>&1"); } elsif ($pgpversion eq "gpg1.0.6") { open(MAIL,">$pgptempdir/$tempfile"); print MAIL "$body_temp$record_separator"; close(MAIL); system("$pgpprog --batch --always-trust -eatr $pgpuserid $pgptempdir/$tempfile > $pgptempdir/out 2>&1"); } elsif ($pgpversion =~ /^(6\.5)/) { open(MAIL,">$pgptempdir/$tempfile"); print MAIL "$body_temp$record_separator"; close(MAIL); system("$pgpprog -e $pgptempdir/$tempfile $pgpuserid"); } elsif ( $pgpversion eq "gpg2.0.11" || $pgpversion eq "gpg1.2.1" ) { $pgp_options = "--batch --always-trust -eatr"; $pgp_command =  "$pgpprog --homedir $ENV{'GNUPGHOME'} $pgp_options $pgpuserid -o $pgptempdir/$tempfile"; open (PGPCOMMAND, "|$pgp_command"); print PGPCOMMAND $body_temp; close (PGPCOMMAND); $pgptempfile = $tempfile; } else { if ($pgp_open_command) { open(PGP, "| $pgpprog -e $pgpuserid -fat 1>$pgptempdir/$tempfile 2> /dev/null"); close(PGP); $pgptempfile = "$tempfile"; } else { system("$pgpprog +batchmode -eat $pgptempdir/$tempfile $pgpuserid"); } } $pgptempfile1 = $tempfile . ".pgp"; $pgptempfile2 = $tempfile . ".asc"; $pgptempfile3 = $tempfile; while ($pgptempfile3 =~ /\./) { chop($pgptempfile3); } $pgptempfile3 = $pgptempfile3 . ".asc"; if (-e "$pgptempdir/$pgptempfile1") { $pgptempfile = "$pgptempfile1"; } if (-e "$pgptempdir/$pgptempfile2") { $pgptempfile = "$pgptempfile2"; } if (-e "$pgptempdir/$pgptempfile3") { $pgptempfile = "$pgptempfile3"; } if ( (!-e "$pgptempdir/$pgptempfile1") &&  (!-e "$pgptempdir/$pgptempfile2") && (!-e "$pgptempdir/$pgptempfile3") && (!$pgp_open_command) && ( $pgpversion ne "gpg2.0.11" ) &&  ( $pgpversion ne "gpg1.2.1" ) ) { print "Content-type: text/html\n\n<H3>Dansie Shopping Cart configuration message:<BR>The ssl.pl script could not detect the creation of the encrypted PGP file. Check to see that you have the correct system path to PGP set in SSV#10 and that your PGP key exists. See Secure Server Variable #10 in section 11 the <A HREF=\"http://www.dansie.net/cart_readme.html\" TARGET=\"ReadMe\">ReadMe</A> for detailed instructions."; print "</H3>"; &footer; } } else { $pgptempfile = "$tempfile"; $FORM{'BillCreditCard'} = "$lang[51] $pgpuserid\n" . "$lang[52]\n"; $FORM{'3_digit_number'} = ""; open(MAIL,">$pgptempdir/$tempfile"); &email_body; print MAIL "$body_temp$record_separator"; close(MAIL); } &email_headers; &email_pgp_body; } else { &email_headers; &email_body; print MAIL "$body_temp$record_separator"; close(MAIL); } if ( $_[0] eq "append_datafile" ) { if ( -d "$FORM{'append_datafile'}" ) { $chmod_temp = "$FORM{'append_datafile'}/orders$FORM{'customerid'}"; `chmod 777 $chmod_temp`; } else { if (!$ENV{'OS'}) { `chmod 777 $FORM{'append_datafile'}`; } } } if ( ($_[0] eq "email") && ( $sendmail =~ /(windmail\.exe)/i || $sendmail =~ /(blat\.exe)/i ) ) { if ( $sendmail =~ /(blat\.exe)/i ) { open(MAIL,"|$sendmail \"$FORM{'blat_different_temp_directory'}\" -t $myemail -s \"$FORM{'customerid'} - $subject\" -f $myemail$blat_server"); close(MAIL); } if ( $sendmail =~ /(windmail\.exe)/i ) { $sendmail = &untaint("$sendmail"); $FORM{'blat_different_temp_directory'} = &untaint("$FORM{'blat_different_temp_directory'}");  system("\"$sendmail\" -t -t -n $FORM{'blat_different_temp_directory'}"); } unlink("$FORM{'blat_different_temp_directory'}"); } if ( $socket_smtp_server ) { open(BODY,"$FORM{'blat_different_temp_directory'}"); @socket_body=<BODY>; close(BODY); $socket_body = join("",@socket_body); $socket_subject = "$FORM{'customerid'} - $subject"; $socket_email_output = &socket_email($myemail,$myemail,$socket_subject,$socket_body,$socket_smtp_server); } if ( ( $FORM{'pgp'} || $pgpprog ) && (!$disable_pgp) ) { $pgptemp1 = &untaint("$pgptempdir/$tempfile"); $pgptemp2 = &untaint("$pgptempdir/$pgptempfile"); unlink("$pgptemp1"); unlink("$pgptemp2"); } } sub CC_Verify { chomp($date); ($trash,$trash,$trash,$trash,$year) = split(/ /,$date); if ( $FORM{'ExpirationYear'} < $year ) { &invalid_cc; } if ( ( $FORM{'ExpirationYear'} == $year ) && ( $FORM{'ExpirationMonth'} < $month ) )  { &invalid_cc; } $cardnumber = $FORM{'BillCreditCard'}; $cardnumber =~ s/ //g; $cardnumber =~ s/-//g; $length = length($cardnumber); if (!($cardnumber =~ /^[0-9]*$/)) { &invalid_cc; } if ($FORM{'cardtype'} eq "visa") { &vlen; } if ($FORM{'cardtype'} eq "mastercard") { &mclen; } if ($FORM{'cardtype'} eq "amex") { &alen; } if ($FORM{'cardtype'} eq "novus") { &nlen; } sub vlen { &invalid_cc unless (($length ==13) || ($length == 16)); } sub mclen { &invalid_cc unless ($length == 16);     } sub alen { &invalid_cc unless ($length == 15);     } sub nlen { &invalid_cc unless ($length == 16);     } if ($FORM{'cardtype'} eq "visa") { &vver; } if ($FORM{'cardtype'} eq "mastercard") { &ver16; } if ($FORM{'cardtype'} eq "amex") { &ver15; } if ($FORM{'cardtype'} eq "novus") { &ver16; } sub vver { if ($length == 13) { &ver13; } if ($length == 16) { &ver16; } } sub ver13 { $cc0 = substr($cardnumber,0,1); $cc1 = substr($cardnumber,1,1); $cc2 = substr($cardnumber,2,1); $cc3 = substr($cardnumber,3,1); $cc4 = substr($cardnumber,4,1); $cc5 = substr($cardnumber,5,1); $cc6 = substr($cardnumber,6,1); $cc7 = substr($cardnumber,7,1); $cc8 = substr($cardnumber,8,1); $cc9 = substr($cardnumber,9,1); $cc10 = substr($cardnumber,10,1); $cc11 = substr($cardnumber,11,1); $cc12 = substr($cardnumber,12,1); $cc1a = $cc1 * 2; $cc3a = $cc3 * 2; $cc5a = $cc5 * 2; $cc7a = $cc7 * 2; $cc9a = $cc9 * 2; $cc11a = $cc11 * 2; if ($cc1a >= 10) { $cc1b = substr($cc1a,0,1); $cc1c = substr($cc1a,1,1); $cc1 = $cc1b+$cc1c; } else { $cc1 = $cc1a; } if ($cc3a >= 10) { $cc3b = substr($cc3a,0,1); $cc3c = substr($cc3a,1,1); $cc3 = $cc3b+$cc3c; } else { $cc3 = $cc3a; } if ($cc5a >= 10) { $cc5b = substr($cc5a,0,1); $cc5c = substr($cc5a,1,1); $cc5 = $cc5b+$cc5c; } else { $cc5 = $cc5a; } if ($cc7a >= 10) { $cc7b = substr($cc7a,0,1); $cc7c = substr($cc7a,1,1); $cc7 = $cc7b+$cc7c; } else { $cc7 = $cc7a; } if ($cc9a >= 10) { $cc9b = substr($cc9a,0,1); $cc9c = substr($cc9a,1,1); $cc9 = $cc9b+$cc9c; } else { $cc9 = $cc9a; } if ($cc11a >= 10) { $cc11b = substr($cc11a,0,1); $cc11c = substr($cc11a,1,1); $cc11 = $cc11b+$cc11c; } else { $cc11 = $cc11a; } $val = $cc0+$cc1+$cc2+$cc3+$cc4+$cc5+$cc6+$cc7+$cc8+$cc9+$cc10+$cc11+$cc12; if (substr($val,1,1) !=0 ) { &invalid_cc; } } sub ver16 { $cc0 = substr($cardnumber,0,1); $cc1 = substr($cardnumber,1,1); $cc2 = substr($cardnumber,2,1); $cc3 = substr($cardnumber,3,1); $cc4 = substr($cardnumber,4,1); $cc5 = substr($cardnumber,5,1); $cc6 = substr($cardnumber,6,1); $cc7 = substr($cardnumber,7,1); $cc8 = substr($cardnumber,8,1); $cc9 = substr($cardnumber,9,1); $cc10 = substr($cardnumber,10,1); $cc11 = substr($cardnumber,11,1); $cc12 = substr($cardnumber,12,1); $cc13 = substr($cardnumber,13,1); $cc14 = substr($cardnumber,14,1); $cc15 = substr($cardnumber,15,1); $cc0a = $cc0 * 2; $cc2a = $cc2 * 2; $cc4a = $cc4 * 2; $cc6a = $cc6 * 2; $cc8a = $cc8 * 2; $cc10a = $cc10 * 2; $cc12a = $cc12 * 2; $cc14a = $cc14 * 2; if ($cc0a >= 10) { $cc0b = substr($cc0a,0,1); $cc0c = substr($cc0a,1,1); $cc0 = $cc0b+$cc0c; } else { $cc0 = $cc0a; } if ($cc2a >= 10) { $cc2b = substr($cc2a,0,1); $cc2c = substr($cc2a,1,1); $cc2 = $cc2b+$cc2c; } else { $cc2 = $cc2a; } if ($cc4a >= 10) { $cc4b = substr($cc4a,0,1); $cc4c = substr($cc4a,1,1); $cc4 = $cc4b+$cc4c; } else { $cc4 = $cc4a; } if ($cc6a >= 10) { $cc6b = substr($cc6a,0,1); $cc6c = substr($cc6a,1,1); $cc6 = $cc6b+$cc6c; } else { $cc6 = $cc6a; } if ($cc8a >= 10) { $cc8b = substr($cc8a,0,1); $cc8c = substr($cc8a,1,1); $cc8 = $cc8b+$cc8c; } else { $cc8 = $cc8a; } if ($cc10a >= 10) { $cc10b = substr($cc10a,0,1); $cc10c = substr($cc10a,1,1); $cc10 = $cc10b+$cc10c; } else { $cc10 = $cc10a; } if ($cc12a >= 10) { $cc12b = substr($cc12a,0,1); $cc12c = substr($cc12a,1,1); $cc12 = $cc12b+$cc12c; } else { $cc12 = $cc12a; } if ($cc14a >= 10) { $cc14b = substr($cc14a,0,1); $cc14c = substr($cc14a,1,1); $cc14 = $cc14b+$cc14c; } else { $cc14 = $cc14a; } $val = $cc0+$cc1+$cc2+$cc3+$cc4+$cc5+$cc6+$cc7+$cc8+$cc9+$cc10+$cc11+$cc12+$cc13+$cc14+$cc15; if (substr($val,1,1) !=0 ) { &invalid_cc; } } sub ver15 { $cc0 = substr($cardnumber,0,1); $cc1 = substr($cardnumber,1,1); $cc2 = substr($cardnumber,2,1); $cc3 = substr($cardnumber,3,1); $cc4 = substr($cardnumber,4,1); $cc5 = substr($cardnumber,5,1); $cc6 = substr($cardnumber,6,1); $cc7 = substr($cardnumber,7,1); $cc8 = substr($cardnumber,8,1); $cc9 = substr($cardnumber,9,1); $cc10 = substr($cardnumber,10,1); $cc11 = substr($cardnumber,11,1); $cc12 = substr($cardnumber,12,1); $cc13 = substr($cardnumber,13,1); $cc14 = substr($cardnumber,14,1); $cc1a = $cc1 * 2; $cc3a = $cc3 * 2; $cc5a = $cc5 * 2; $cc7a = $cc7 * 2; $cc9a = $cc9 * 2; $cc11a = $cc11 * 2; $cc13a = $cc13 * 2; if ($cc1a >= 10) { $cc1b = substr($cc1a,0,1); $cc1c = substr($cc1a,1,1); $cc1 = $cc1b+$cc1c; } else { $cc1 = $cc1a; } if ($cc3a >= 10) { $cc3b = substr($cc3a,0,1); $cc3c = substr($cc3a,1,1); $cc3 = $cc3b+$cc3c; } else { $cc3 = $cc3a; } if ($cc5a >= 10) { $cc5b = substr($cc5a,0,1); $cc5c = substr($cc5a,1,1); $cc5 = $cc5b+$cc5c; } else { $cc5 = $cc5a; } if ($cc7a >= 10) { $cc7b = substr($cc7a,0,1); $cc7c = substr($cc7a,1,1); $cc7 = $cc7b+$cc7c; } else { $cc7 = $cc7a; } if ($cc9a >= 10) { $cc9b = substr($cc9a,0,1); $cc9c = substr($cc9a,1,1); $cc9 = $cc9b+$cc9c; } else { $cc9 = $cc9a; } if ($cc11a >= 10) { $cc11b = substr($cc11a,0,1); $cc11c = substr($cc11a,1,1); $cc11 = $cc11b+$cc11c; } else { $cc11 = $cc11a; } if ($cc13a >= 10) { $cc13b = substr($cc13a,0,1); $cc13c = substr($cc13a,1,1); $cc13 = $cc13b+$cc13c; } else { $cc13 = $cc13a; } $val = $cc0+$cc1+$cc2+$cc3+$cc4+$cc5+$cc6+$cc7+$cc8+$cc9+$cc10+$cc11+$cc12+$cc13+$cc14; if (substr($val,1,1) !=0 ) { &invalid_cc; } } } sub valid_cc { if ( $perl_redirect ) { print "Location: $FORM{'MerchantApprovedURL'}\n\n"; } print "Content-type: text/html\n\n"; print " <HTML> <HEAD>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1]"; } else { print "<TITLE>$lang[25]"; } print  " - $FORM{'MerchantName'}</TITLE>"; print "<META HTTP-EQUIV=REFRESH CONTENT=0;URL=$FORM{'MerchantApprovedURL'}> \n$FORM{'meta_tag'}\n</HEAD>"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"#FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\">"; } print "<H4> <CENTER> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">"; if ( $ENV{'QUERY_STRING'} ne "check" ) { if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "$lang[27]"; } else { print "$lang[30]"; } } else { if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "$lang[49]"; } else { print "$lang[50]"; } } print "<BR><BR><A HREF=\"$FORM{'MerchantApprovedURL'}\"><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[31]</FONT></A>"; print "</FONT> </CENTER> </H4> </BODY></HTML>\n <NOSCRIPT>\n <SCRIPT>\n /*\n"; } sub invalid_cc { if ( $perl_redirect ) { print "Location: $FORM{'MerchantUnApprovedURL'}\n\n"; } print "Content-type: text/html\n\n"; print " <HTML> <HEAD>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1]"; } else { print "<TITLE>$lang[25]"; } print  " - $FORM{'MerchantName'}</TITLE>"; print "<META HTTP-EQUIV=REFRESH CONTENT=0;URL=$FORM{'MerchantUnApprovedURL'}> \n$FORM{'meta_tag'}\n</HEAD>"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"#FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\">"; } print "<H4> <CENTER> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"> $lang[28]"; print "<BR><BR><A HREF=\"$FORM{'MerchantUnApprovedURL'}\"><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[31]</FONT></A>"; print "</FONT> </CENTER> </H4> </BODY></HTML>"; exit; } sub kill_input { print "Content-type: text/html\n\n"; $value = ""; print "<CENTER><H1><FONT COLOR=\"\#FF0000\">CGI Alert</FONT></H1></CENTER>\n"; print "<CENTER><H3>It appears as though you've tried to execute a system command via a SSI tag or shell metacharacter. Please use your <B>Back</B> button, remove the tags or characters and re-submit. Thanks! </H3></CENTER>\n"; exit; } sub untaint { if ( $_[0] ne "" ) { $_[0] =~ /^(.+)$/; $a = $1; } else { $a = ""; } return $a; } sub get_date { @date = localtime(time); foreach (@date) { if ( $_ < 10 ) { $_ = "0" . $_; } } $month = $date[4]; $month++; $date[4] = (Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec)[$date[4]]; $date[6] = (Sun,Mon,Tue,Wed,Thu,Fri,Sat)[$date[6]]; $date[5] += 1900; $Cookie_Exp_Date = "$date[6] $date[4] $date[3] $date[2]:$date[1]:$date[0] $date[5]"; return $Cookie_Exp_Date; } sub footer { print "<H3>Comments, Questions, Suggestions: <A HREF=\"mailto:&#99;&#97;&#114;&#116;&#64;&#100;&#97;&#110;&#115;&#105;&#101;&#46;&#110;&#101;&#116;\">&#99;&#97;&#114;&#116;&#64;&#100;&#97;&#110;&#115;&#105;&#101;&#46;&#110;&#101;&#116;</A> </H3> <BR> <FONT SIZE=-1> ssl.pl $version<BR> 5/22/1998 - 2/4/2009<BR> Dansie Shopping Cart<BR> <A HREF=\"http://www.dansie.net\">http://www.dansie.net</A><BR> </FONT> </BODY> </HTML>"; exit; } sub print_check_draft_info { if ( $FORM{'check_wp'} =~ /^(http)/i ) { $check_bg = "BACKGROUND=\"$FORM{'check_wp'}\""; } else { $check_bg = "BGCOLOR=\"$FORM{'check_wp'}\""; } if ( $FORM{'check_draft_image'} ) { print "\n<BR><IMG SRC=\"$FORM{'check_draft_image'}\"><BR>\n"; } print "\n<BR><TABLE BORDER=0 ALIGN=CENTER $check_bg CELLSPACING=0> <TR> <TD><BR></TD><TD><BR></TD><TD><BR></TD>  </TR> <TR> <TD VALIGN=TOP> <FONT COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> $lang[38]<BR> <INPUT TYPE=TEXT SIZE=25 MAXLENGTH=40 NAME=\"bank_name\" > <BR>\n"; if ($require_bank_address) { print "$lang[39] <BR> <INPUT TYPE=TEXT SIZE=25 MAXLENGTH=40 NAME=\"bank_address\" > <BR>\n"; } if ( $require_bank_city || $require_bank_state || $require_bank_zip ) { print "$lang[40]<BR>\n"; } if ($require_bank_city) { print "<INPUT TYPE=TEXT SIZE=20 MAXLENGTH=30 NAME=\"bank_city\" >\n"; } if ($require_bank_state) { print "<INPUT TYPE=TEXT SIZE=5 MAXLENGTH=20 NAME=\"bank_state\" >\n"; } if ($require_bank_zip) { print "<INPUT TYPE=TEXT SIZE=10 MAXLENGTH=20 NAME=\"bank_postal_code\" >\n"; } if ( $require_bank_city || $require_bank_state || $require_bank_zip ) { print "<BR>\n"; } if ($require_bank_phone) { print "$lang[43] <BR> <INPUT TYPE=TEXT SIZE=15 MAXLENGTH=20 NAME=\"bank_phone\" >\n"; } print "</TD> <TD ROWSPAN=2> &nbsp;&nbsp;&nbsp;&nbsp; </TD> <TD ALIGN=RIGHT VALIGN=TOP > <FONT COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\">\n"; if ($require_check_number) { print "$lang[34]<BR> <INPUT TYPE=TEXT SIZE=8 MAXLENGTH=10 NAME=\"check_number\" > <BR>\n"; } if ($require_aba_number) { print "$lang[46]<BR> <INPUT TYPE=TEXT SIZE=20 MAXLENGTH=20 NAME=\"aba_number\" > <BR>\n"; } print "$lang[35]<BR> <INPUT TYPE=TEXT SIZE=20 MAXLENGTH=40 NAME=\"check_date\" VALUE=\"$date\"> </FONT><BR> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> $lang[36]<BR> <TABLE BORDER=1 BGCOLOR=\"#FFFFFF\" CELLSPACING=0><TR BGCOLOR=\"#FFFFFF\"><TD BGCOLOR=\"#FFFFFF\"><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"#000000\" SIZE=\"$check_font_size\">&nbsp;&nbsp;$FORM{'fulltotal'}</FONT></TD></TR></TABLE> </FONT> </TD> </TR> <TR> <TD VALIGN=BOTTOM> <TABLE BORDER=0 CELLSPACING=0 > <TR> <TD>\n"; if ($require_routing_number) { print "<FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> $lang[44] </FONT>\n"; } print "</TD> <TD>\n"; if ($require_account_number) { print "<FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> $lang[45] </FONT>\n"; } print "</TD> </TR> <TR> <TD>\n"; if ($require_routing_number) { print "<FONT COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> <B>$lang[65]</B> <INPUT TYPE=TEXT SIZE=15 MAXLENGTH=9 NAME=\"routing_number\"> <B>$lang[65]</B> </FONT>"; } print "</TD> <TD>\n"; if ($require_account_number) { print "<FONT COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> <INPUT TYPE=TEXT SIZE=15 MAXLENGTH=20 NAME=\"account_number\"> <B>$lang[66]</B> </FONT>\n"; } print "</TD> </TR> </TABLE> </FONT> </TD> <TD ALIGN=RIGHT  > <FONT COLOR=\"$FORM{'MerchantFontColor'}\" SIZE=\"$check_font_size\"> $lang[37]<BR> <INPUT TYPE=TEXT SIZE=20 MAXLENGTH=30 NAME=\"authorized_by\" > </FONT> </TD> </TR> </TABLE>"; } sub back_button2 { if ( $FORM{'MerchantReturnURL'} && $lang[32] ) { if ( $FORM{'MerchantReturnURL'} =~ /(.+)(\?)(.+)/ ) { $back_method = "POST"; } else { $back_method = "GET"; } print "<CENTER> <FORM METHOD=$back_method ACTION=\"$FORM{'MerchantReturnURL'}\" TARGET=\"_top\">\n"; if ( $lang[32] =~ /^http/i ) { print "<INPUT TYPE=IMAGE NAME=\"\" SRC=\"$lang[32]\" VALUE=\"$lang[32]\" BORDER=0>"; } else { print "<INPUT TYPE=submit VALUE=\"$lang[32]\">\n"; } print "</FORM> </CENTER>\n"; } } sub back_button { if ( $FORM{'MerchantReturnURL'} && $lang[32] ) { print "<CENTER>\n"; &resubmit_info; print "<INPUT TYPE=HIDDEN NAME=BillName VALUE=\"$FORM{'BillName'}\">\n <INPUT TYPE=HIDDEN NAME=company VALUE=\"$FORM{'company'}\">\n <INPUT TYPE=HIDDEN NAME=BillStreet VALUE=\"$FORM{'BillStreet'}\">\n <INPUT TYPE=HIDDEN NAME=BillCity VALUE=\"$FORM{'BillCity'}\">\n <INPUT TYPE=HIDDEN NAME=BillState VALUE=\"$FORM{'BillState'}\">\n <INPUT TYPE=HIDDEN NAME=BillZip VALUE=\"$FORM{'BillZip'}\">\n <INPUT TYPE=HIDDEN NAME=BillCountry VALUE=\"$FORM{'BillCountry'}\">\n <INPUT TYPE=HIDDEN NAME=BillPhone VALUE=\"$FORM{'BillPhone'}\">\n <INPUT TYPE=HIDDEN NAME=BillEmail VALUE=\"$FORM{'BillEmail'}\">\n"; if ( $lang[32] =~ /^http/i ) { print "<INPUT TYPE=IMAGE NAME=\"\" SRC=\"$lang[32]\" VALUE=\"$lang[32]\" BORDER=0>"; } else { print "<INPUT TYPE=submit VALUE=\"$lang[32]\">\n"; } print "</FORM> </CENTER>\n"; } } sub resubmit_info { print "<FORM METHOD=post ACTION=\"$FORM{'ssl_url'}\">\n <INPUT TYPE=hidden NAME=\"ssl_url\" VALUE=\"$FORM{'ssl_url'}\">\n <INPUT TYPE=HIDDEN NAME=\"date_command\" VALUE=\"$FORM{'date_command'}\">\n <INPUT TYPE=HIDDEN NAME=\"append_datafile\" VALUE=\"$FORM{'append_datafile'}\">\n <INPUT TYPE=HIDDEN NAME=\"target_name\" VALUE=\"$FORM{'target_name'}\">\n <INPUT TYPE=HIDDEN NAME=\"use_state\" VALUE=\"$FORM{'use_state'}\">\n <INPUT TYPE=HIDDEN NAME=\"blat_different_temp_directory\" VALUE=\"$FORM{'blat_different_temp_directory'}\">\n <INPUT TYPE=HIDDEN NAME=\"meta_tag\" VALUE='$FORM{'meta_tag'}'>\n <INPUT TYPE=HIDDEN NAME=\"card_types\" VALUE=\"$FORM{'card_types'}\">\n <INPUT TYPE=hidden NAME=\"fulltotal\" VALUE=\"$FORM{'fulltotal'}\">\n <INPUT TYPE=hidden NAME=\"MerchantName\" VALUE=\"$FORM{'MerchantName'}\">\n <INPUT TYPE=hidden NAME=\"MerchantID\" VALUE=\"$FORM{'MerchantID'}\">\n <INPUT TYPE=hidden NAME=\"MerchantEmail\" VALUE=\"$FORM{'MerchantEmail'}\">\n <INPUT TYPE=hidden NAME=\"MerchantFont\" VALUE=\"$FORM{'MerchantFont'}\">\n <INPUT TYPE=hidden NAME=\"MerchantFontColor\" VALUE=\"$FORM{'MerchantFontColor'}\">\n <INPUT TYPE=hidden NAME=\"MerchantBgrdColor\" VALUE=\"$FORM{'MerchantBgrdColor'}\">\n <INPUT TYPE=hidden NAME=\"MerchantApprovedURL\" VALUE=\"$FORM{'MerchantApprovedURL'}\">\n <INPUT TYPE=hidden NAME=\"MerchantUnApprovedURL\" VALUE=\"$FORM{'MerchantUnApprovedURL'}\">\n <INPUT TYPE=hidden NAME=\"MerchantReturnURL\" VALUE=\"$FORM{'MerchantReturnURL'}\">\n <INPUT TYPE=hidden NAME=\"customerid\" VALUE=\"$FORM{'customerid'}\">\n <INPUT TYPE=hidden NAME=\"pgp\" VALUE='$FORM{'pgp'}'>\n <INPUT TYPE=hidden NAME=\"use_company_name_field\" VALUE=\"$FORM{'company'}\">\n <INPUT TYPE=hidden NAME=\"ssl_tracking_dir\" VALUE=\"$FORM{'ssl_tracking_dir'}\">\n <INPUT TYPE=HIDDEN NAME=check_draft_image VALUE=\"$FORM{'check_draft_image'}\">\n <INPUT TYPE=HIDDEN NAME=check_wp VALUE=\"$FORM{'check_wp'}\">\n"; } sub email_headers { if ( $_[0] eq "append_datafile" ) { if ( $FORM{'append_datafile'} =~ /(.+)(\|)(.+)/ ) { $FORM{'append_datafile'} = $1; } if (-d "$FORM{'append_datafile'}") { $FORM{'append_datafile'} = "$FORM{'append_datafile'}/orders$FORM{'customerid'}" . ".$extension"; } open (MAIL, ">>$FORM{'append_datafile'}"); print MAIL "Date: $date\n"; print MAIL "To: $FORM{'MerchantName'} <$myemail>\n"; print MAIL "From: $FORM{'BillName'} <$FORM{'BillEmail'}>\n"; print MAIL "Subject: $FORM{'customerid'} - $subject\n\n"; } if ( $_[0] eq "email" ) { if ( $sendmail =~ /(windmail\.exe)/i || $sendmail =~ /(blat\.exe)/i || $socket_smtp_server  ) { if ( $sendmail =~ /(-server)/ ) { ($sendmail,$blat_server) = split(/-server/,$sendmail); $sendmail =~ s/ //g; $blat_server =~ s/ //g; $blat_server = " -server \"$blat_server\""; } $untainted = &untaint("$FORM{'blat_different_temp_directory'}"); open (MAIL, ">$untainted"); } elsif ( $sendmail ) { while($myemail =~ / /) { chop($myemail); } if ($myemail !~ /^(.+)(\@)(.+)(\.)(.+)$/) { $myemail = ""; } if ( $sendmail eq "windmail -t" ) { open (MAIL, "|$sendmail"); } elsif ( $sendmail =~ /(cgimail)$/ ) { open (MAIL, "|$sendmail"); } elsif ( $sendmail =~ /(-t)/ ) { open (MAIL, "|$sendmail"); } elsif ( $no_f_switch ) { open (MAIL, "|$sendmail"); } else { open (MAIL, "|$sendmail $myemail") || die "Can't open $sendmail!\n"; } } $FORM{'MerchantName'} =~ s/\,//g; $FORM{'BillName'} =~ s/\,//g; if ( ($sendmail =~ /(windmail\.exe)/i) || ( $sendmail eq "windmail -t" ) ) { print MAIL "To: $myemail\n"; print MAIL "From: $myemail\n"; print MAIL "Reply-To: $FORM{'BillEmail'}\n"; print MAIL "Subject: $FORM{'customerid'} - $subject\n\n"; } elsif (!$socket_smtp_server) { print MAIL "To: $FORM{'MerchantName'} <$myemail>\n"; print MAIL "From: $FORM{'BillName'} <$FORM{'BillEmail'}>\n"; print MAIL "Subject: $FORM{'customerid'} - $subject\n\n"; } } } sub email_body { $body_temp = ""; if ( !( $FORM{'pgp'} || $pgpprog ) || ($disable_pgp) ) { $body_temp .= "WARNING: Your customer credit card information is not currently encrypted. According to PCI/DSS compliance you must use encryption to store client information. Please use either PGP or GPG. Once you have installed the PGP or GPG program, contact your hosting company with your exported public key so it may be imported into the server's keyring. See the PGP variables near the top of the ssl.txt file and set those. This message will go away once you have enabled PGP or GPG encryption with ssl.pl.\n\n"; } else { $body_temp .= "WARNING: This message was encrypted with PGP/GPG and is now decrypted. After you use the information below you need to either destroy this information or re-encrypt it with PGP/GPG to remain PCI/DSS compliant.\n\n"; } $body_temp .= "$lang[3] $FORM{'fulltotal'}\n"; $body_temp .= "$lang[5] $FORM{'BillName'}\n"; $body_temp .= "$lang[56] $FORM{'company'}\n" if ($FORM{'use_company_name_field'}); $body_temp .= "$lang[6] $FORM{'BillStreet'}\n"; $body_temp .= "$lang[7] $FORM{'BillCity'}\n"; $body_temp .= "$lang[8] $FORM{'BillState'}\n" if ($lang[8]); $body_temp .= "$lang[9] $FORM{'BillZip'}\n" if ($lang[9]); $body_temp .= "$lang[10] $FORM{'BillCountry'}\n" if ($lang[10]); $body_temp .= "$lang[12] $FORM{'BillPhone'}\n" if ($lang[12]); $body_temp .= "$lang[11] $FORM{'BillEmail'}\n" if ($require_email); $body_temp .= "$lang[41] $FORM{'customerid'}\n"; $body_temp .= "$lang[47] $ENV{'REMOTE_HOST'}\n"; $body_temp .= "$lang[48] $ENV{'REMOTE_ADDR'}\n"; if ( $ENV{'QUERY_STRING'} ne "check" ) { $body_temp .= "$lang[21] $FORM{'ExpirationMonth'}\n"; $body_temp .= "$lang[22] $FORM{'ExpirationYear'}\n"; $body_temp .= "$lang[13] $cardtype\n" if ($lang[13]); if ($spaces_every_four_digits_for_clarity) { $FORM{'BillCreditCard'} =~ s/(\d\d\d\d)(\d\d\d\d)(\d\d\d\d)(\d\d\d\d)/$1 $2 $3 $4/; } else { $FORM{'BillCreditCard'} =~ s/\s//g; $FORM{'BillCreditCard'} =~ s/-//g; } $body_temp .= "$lang[20] $FORM{'BillCreditCard'}\n"; if ($FORM{'3_digit_number'}) { $body_temp .= "$lang[68] $FORM{'3_digit_number'}\n"; } $body_temp .= "$lang[53] $FORM{'switch'}\n" if ($FORM{'switch'}); $body_temp .= "$lang[62] $FORM{'switch_start_date'}\n" if ($FORM{'switch_start_date'} && $lang[62]); } else { $body_temp .= "\n$lang[38] $FORM{'bank_name'}\n"; $body_temp .= "$lang[39] $FORM{'bank_address'}\n"; $body_temp .= "$lang[40] $FORM{'bank_city'}, $FORM{'bank_state'} $FORM{'bank_postal_code'}\n"; $body_temp .= "$lang[43] $FORM{'bank_phone'}\n"; $body_temp .= "$lang[34] $FORM{'check_number'}\n"; $body_temp .= "$lang[46] $FORM{'aba_number'}\n"; $body_temp .= "$lang[35] $FORM{'check_date'}\n"; $body_temp .= "$lang[44] $FORM{'routing_number'}\n"; $body_temp .= "$lang[45] $FORM{'account_number'}\n"; $body_temp .= "$lang[37] $FORM{'authorized_by'}\n"; } if ( $sendmail eq "windmail -t" ) { $body_temp .= ".\n"; } } sub email_pgp_body { open(FILE,"$pgptempdir/$pgptempfile"); binmode(FILE); binmode(MAIL); @pgplines=<FILE>; close(FILE); foreach (@pgplines) { print MAIL "$_"; } print MAIL "\n\n\n"; close(MAIL); } sub authorized_referrers { if ($authorized_referrers) { $http_referer = "$ENV{'HTTP_REFERER'}"; $http_referer =~ s/(http:\/\/)//i; $http_referer =~ s/(https:\/\/)//i; while ( $http_referer =~ /\// ) { chop($http_referer); } $pass_through = 0; foreach (@authorized_referrers) { if ( $http_referer =~ /($_)/ ) { $pass_through = 1; } } if (!$pass_through) { print "Content-type: text/html\n\n"; print "<HTML><HEAD>"; if ( $ENV{'HTTPS'} =~ /(on)/i ) { print "<TITLE>$lang[1]"; } else { print "<TITLE>$lang[25]"; } print  " - $FORM{'MerchantName'}</TITLE>"; if ( $FORM{'MerchantBgrdColor'} =~ /^(http)/ ) { print "<BODY BGCOLOR=\"#FFFFFF\"  BACKGROUND=\"$FORM{'MerchantBgrdColor'}\">"; } else { print "<BODY BGCOLOR=\"$FORM{'MerchantBgrdColor'}\">"; } print "<H4><CENTER><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">"; print "<BR>$lang[55]<BR><BR>$ENV{'HTTP_REFERER'}<BR><BR>Administrator, set the \$authorized_referrers variable near the top of the ssl.pl script."; print "</FONT></CENTER></H4></BODY></HTML>"; exit; } } } sub order_tracking { if ($FORM{'ssl_tracking_dir'}) { $tracking[1] = "$FORM{'customerid'}"; $tracking[2] = "$FORM{'BillName'}"; if ($FORM{'company'}) { $tracking[2] .= " - $FORM{'company'}"; } $tracking[3] = "$FORM{'BillEmail'}"; $tracking[4] = "$FORM{'BillPhone'}"; $tracking[5] = "$FORM{'fulltotal'}"; $tracking[9] = "$date"; $tracking[11] = "$FORM{'BillStreet'}"; $tracking[12] = "$FORM{'BillCity'}"; $tracking[13] = "$FORM{'BillState'}"; $tracking[14] = "$FORM{'BillZip'}"; $tracking[15] = "$FORM{'BillCountry'}"; $tracking[16] = "$subject"; $tracking[17] = "$ENV{'REMOTE_HOST'}"; $tracking[18] = "$ENV{'REMOTE_ADDR'}"; if ( $ENV{'QUERY_STRING'} ne "check" ) { $tracking[19] = "$FORM{'ExpirationMonth'}"; $tracking[20] = "$FORM{'ExpirationYear'}"; $tracking[21] = "$cardtype"; if ($spaces_every_four_digits_for_clarity) { $FORM{'BillCreditCard'} =~ s/(\d\d\d\d)(\d\d\d\d)(\d\d\d\d)(\d\d\d\d)/$1 $2 $3 $4/; } else { $FORM{'BillCreditCard'} =~ s/\s//g; $FORM{'BillCreditCard'} =~ s/-//g; } $tracking[22] = "$FORM{'BillCreditCard'}"; if ($FORM{'3_digit_number'}) { $tracking[22] .= " $FORM{'3_digit_number'}"; } $tracking[23] = "$FORM{'switch'} $FORM{'switch_start_date'}"; } else { $tracking[19] = "$FORM{'bank_name'}"; $tracking[20] = "$FORM{'bank_address'}"; $tracking[21] = "$FORM{'bank_city'}"; $tracking[22] = "$FORM{'bank_state'}"; $tracking[23] = "$FORM{'bank_postal_code'}"; $tracking[24] = "$FORM{'bank_phone'}"; $tracking[25] = "$FORM{'check_number'}"; $tracking[26] = "$FORM{'aba_number'}"; $tracking[27] = "$FORM{'check_date'}"; $tracking[28] = "$FORM{'routing_number'}"; $tracking[29] = "$FORM{'account_number'}"; $tracking[30] = "$FORM{'authorized_by'}"; } open(TRACKING,">>$FORM{'ssl_tracking_dir'}"); print TRACKING "$tracking[1]$delimiter$tracking[2]$delimiter$tracking[3]$delimiter$tracking[4]$delimiter$tracking[5]$delimiter$tracking[6]$delimiter$tracking[7]$delimiter$tracking[8]$delimiter$tracking[9]$delimiter$tracking[10]$delimiter$tracking[11]$delimiter$tracking[12]$delimiter$tracking[13]$delimiter$tracking[14]$delimiter$tracking[15]$delimiter$tracking[16]$delimiter$tracking[17]$delimiter$tracking[18]$delimiter$tracking[19]$delimiter$tracking[20]$delimiter$tracking[21]$delimiter$tracking[22]"; if ( $ENV{'QUERY_STRING'} ne "check" && ($FORM{'switch'}) ) { print TRACKING "$delimiter$tracking[23]"; } if ( $ENV{'QUERY_STRING'} eq "check" ) { print TRACKING "$delimiter$tracking[23]$delimiter$tracking[24]$delimiter$tracking[25]$delimiter$tracking[26]$delimiter$tracking[27]$delimiter$tracking[28]$delimiter$tracking[29]$delimiter$tracking[30]"; } print TRACKING "\n"; close(TRACKING); } } sub diagnostics { if ($ENV{'QUERY_STRING'} eq "env" ) { print "Content-type: text/html\n\n"; print "<STRONG>\%ENV Environment variables:</STRONG><BR><BR>"; foreach $key (sort { $a cmp $b } keys %ENV ) { print "$key = $ENV{$key}<br>\n"; } print "Perl Version: $]<BR>\n"; print "Sendmail?: $sendmail<BR>\n"; exit; } if ( $ENV{'QUERY_STRING'} eq "path" ) { if ($ENV{'PATH_TRANSLATED'} || $ENV{'OS'}) { if ($ENV{'PATH_TRANSLATED'}) { $windows_path = $ENV{'PATH_TRANSLATED'}; $windows_path = $ENV{'PATH_TRANSLATED'}; } if ($ENV{'DOCUMENT_ROOT'}) { $temp = "$ENV{'DOCUMENT_ROOT'}"; while ($temp =~ /[\\|\/]$/) { chop($temp); } if (!-e "$temp$ENV{'SCRIPT_NAME'}") { $a = ""; until ($a eq "/" || $a eq "\\" || $temp eq "") { $a = chop($temp); } } $windows_path = "$temp$ENV{'SCRIPT_NAME'}"; $windows_path = "$temp$ENV{'SCRIPT_NAME'}"; } $windows_path =~ s/\\/\//g; $a = ""; until ( !$windows_path || $a eq "/" ) { $a = chop($windows_path); } if (!-e "$windows_path") { $windows_path = "I don't know the system path. Ask your host. =)"; } } if ($ENV{'DOCUMENT_ROOT'} && !$ENV{'OS'}) { $path = `pwd`; if (!-e "$path") { $path = "$ENV{'DOCUMENT_ROOT'}$ENV{'SCRIPT_NAME'}"; } if (!-e "$path") { $path = "$ENV{'SCRIPT_FILENAME'}"; } $a = ""; until ( !$path || $a eq "/" ) { $a = chop($path); } if (!-e "$path") { $path = "I don't know the system path. Ask your host. =)"; } } if (!$ENV{'DOCUMENT_ROOT'} && !$ENV{'OS'} ) { $windows_95_path = "$ENV{'PATH'}"; while ( $windows_95_path =~ /;/ ) { chop($windows_95_path); } $windows_95_path .= "$ENV{'SCRIPT_NAME'}"; $windows_95_path =~ s/\\/\//g; $a = ""; until ( !$windows_95_path || $a eq "/" ) { $a = chop($windows_95_path); } if (!-e "$windows_95_path") { $windows_95_path = "I don't know the system path. Ask your host. =)"; } } print "Content-type: text/html\n\n"; print "$path<BR>"; print "$windows_path<BR>"; print "$windows_95_path<BR>"; if ($vars_variable_set) { print "You have set \$vars to:  \"$vars_variable_set\""; } exit; } if ($ENV{'QUERY_STRING'} eq "lang" ) { print "Content-type: text/html\n\n"; print "<STRONG>Language variables:</STRONG><BR><BR>"; $n = 0; foreach $lang (@lang) { $lang =~ s/\</\&lt;/g; print "$n -->$lang<BR>\n"; $n++; } exit; } if ( $ENV{'QUERY_STRING'} =~ /^write_test/i && $blat_different_temp_directory ) { $path1 = "$blat_different_temp_directory/test.txt"; open(FILE,">>$path1"); print FILE "testing... \n"; close(FILE); print "Content-type: text/html\n\n"; print "<B>Blat/Windmail temp directory write permissions test:</B><BR>"; open(FILE,"$path1"); @lines = <FILE>; close(FILE); open(FILE,"$path2"); @lines2 = <FILE>; close(FILE); print "<TABLE BORDER=1> <TR><TD>System Path:</TD><TD>$path1</TD></TR> <TR><TD>Writable?</TD><TD>@lines &nbsp;</TD></TR> </TABLE><BR>"; print "Are the contents of the above table growing or changing as you click the RELOAD/REFRESH button at the top of your browser? If not then permissions are not set as writable. If you don't know how to set the permissions, send your host the URL to this page and ask your them to set permissions for you on this directory and file so the cart.pl script can write to them."; &footer; } } sub socket_email { my $recipient = $_[0]; my $emailfrom = $_[1]; my $subject = $_[2]; my $message = $_[3]; my $smtp_server = $_[4]; ($x,$x,$x,$x, $here) = gethostbyname($null); ($x,$x,$x,$x, $there) = gethostbyname($smtp_server); my $thisserver = pack('S n a4 x8',2,0,$here); my $remoteserver = pack('S n a4 x8',2,25,$there); (!(socket(S,2,1,6))) && (return "Connect error! socket"); (!(bind(S,$thisserver))) && (return "Connect error! bind"); (!(connect(S,$remoteserver))) && (return "!! connection to $smtp_server has failed!"); select(S); $| = 1; select(STDOUT); $DATA_IN = <S>; if ($DATA_IN !~ /^220/) { return "data in Connect error - 220"; } print S "HELO localhost\r\n"; $DATA_IN = <S>; if ($DATA_IN !~ /^250/) { return "$DATA_IN - data in Connect error - 250"; } if (!$socket_return_path) { $socket_return_path = "$emailfrom"; } print S "MAIL FROM:<$socket_return_path>\r\n"; $DATA_IN = <S>; if ($DATA_IN !~ /^250/) { return "'From' address not valid"; } print S "RCPT TO:<$recipient>\r\n"; $DATA_IN = <S>; if ($DATA_IN !~ /^250/) { return "'Recipient' address not valid"; } print S "DATA\r\n"; $DATA_IN = <S>; if ($DATA_IN !~ /^354/) { return "Message send failed - 354"; } $message =~ s/\n/\r\n/g; print S "From: $emailfrom\r\nTo: $recipient\r\nSubject: $subject\r\n\r\n$message\r\n.\r\n"; $DATA_IN = <S>; if ($DATA_IN !~ /^250/) { return "Message send failed - try again - 250"; } print S "QUIT\n"; return "Mail Sent!"; } sub display_card_types { print "<TR> <TD> <IMG style=\"width: 150px;\" SRC=\"../cgi-bin/cc-accepted.jpg\" ALT=\"\" BORDER=0> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[13] </FONT></TD> <TD>\n"; if ( $visa ) { print "<INPUT style=\"cursor: pointer;\"  TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"visa\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[14]</B></FONT><BR>\n"; } if ( $mastercard ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"mastercard\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[15]</B></FONT><BR>\n"; } if ( $amex ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"amex\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[16]</B></FONT><BR>\n"; } if ( $novus ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"novus\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[17]</B></FONT><BR>\n"; } if ( $dinersclub ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"dinersclub\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[18]</B></FONT><BR>\n"; } if ( $carteblanche ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"carteblanche\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[19]</B></FONT><BR>\n"; } if ( $delta ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"delta\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[57]</B></FONT><BR>\n"; } if ( $switch ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"switch\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[58]</B></FONT><BR>\n"; } if ( $solo ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"solo\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[59]</B></FONT><BR>\n"; } if ( $visadebit ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"visadebit\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[60]</B></FONT><BR>\n"; } if ( $barclaysconnect ) { print "<INPUT TYPE=RADIO NAME=\"$cardtype_variable_name\" VALUE=\"barclaysconnect\"> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"><B>$lang[61]</B></FONT><BR>\n"; } print "</TD> </TR>"; } sub month_and_year_expiration_select_menus { print "<TR> <TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\">$lang[21]</FONT> </TD><TD><FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"> </FONT><SELECT style=\"padding: 10px; font-size: 16px; cursor:pointer;\" NAME=\"$ExpirationMonth\" onChange=\"blur()\"> <OPTION> Month <OPTION> 01 <OPTION> 02 <OPTION> 03 <OPTION> 04 <OPTION> 05 <OPTION> 06 <OPTION> 07 <OPTION> 08 <OPTION> 09 <OPTION> 10 <OPTION> 11 <OPTION> 12 </SELECT> <FONT FACE=\"$FORM{'MerchantFont'}\" COLOR=\"$FORM{'MerchantFontColor'}\"></FONT><SELECT style=\"padding: 10px; font-size: 16px; cursor: pointer;\" NAME=\"$ExpirationYear\" onChange=\"blur()\"><OPTION>Year\n"; chomp($date); ($trash,$trash,$trash,$trash,$year) = split(/ /,$date); for($i=0;$i<=10;$i++) { $b = $year + $i; print "<OPTION>$b\n"; } print "</SELECT></TD> </TR>\n"; } sub get_vars { if (!$new_line_sub) { $new_line_sub = chr(20); } if (!-e "$_[0]") { print "Content-Type: text/html\n\n"; print "Cannot find $_[0]!<BR>\nMake sure you have uploaded ssl.txt<BR>\nOr set system path to your ssl.txt file manually inside ssl.pl script.<BR>\n"; exit; } if (!-r "$_[0]") { print "Content-Type: text/html\n\n"; print "Not readable: $_[0]!<BR>\nMake sure permissions on ssl.txt are chmoded as readable.<BR>\n"; exit; } open(VARS,"$_[0]"); @lines=<VARS>; close(VARS); foreach (@lines) { $line = $_; chomp($line); if ( $line =~ /^#/ || $line =~ /^$/ ) { next; } $line =~ /(.+?)=(.*)/; $name = $1; $value = $2; $name =~ s/\s$//; $name =~ s/^\s//; $value =~ s/\s$//; $value =~ s/^\s//; $value =~ s/^"(.*)";$/$1/; $value =~ s/^"(.*)"$/$1/; $value =~ s/^(\d+);/$1/; $value =~ s/\\"/"/g; $value =~ s/"/\\"/g; $value =~ s/@/\\@/g; if ( $value =~ /^[a-zA-Z]:(\/|\\)/ ) { $value =~ s/\\/\//gs; } if ($name =~ /TEXTAREA$/) { $value =~ s/$new_line_sub/\n/g; } $code = "\$$name = \"$value\";\n"; eval($code); if ($@) { print "Content-Type: text/html\n\n"; print "<PRE>Error compiling vars: <XMP>$code</XMP>\n$@\n"; exit; } } }
